from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = 'e67968a720f4'
down_revision = '56c368f5d3ba'
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('message') as batch_op:
        if isinstance(op.get_bind().dialect, sqlite.dialect):
            batch_op.add_column(sa.Column('body_temp', sa.Text(), nullable=False, server_default=''))
            batch_op.execute('UPDATE message SET body_temp = body')
            batch_op.drop_column('body')
            batch_op.alter_column('body_temp', new_column_name='body')
        else:
            batch_op.alter_column('body', nullable=False, existing_type=sa.VARCHAR(length=140), type_=sa.Text())
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('message') as batch_op:
        if isinstance(op.get_bind().dialect, sqlite.dialect):
            batch_op.add_column(sa.Column('body_temp', sa.VARCHAR(length=140), nullable=True))
            batch_op.execute('UPDATE message SET body_temp = body')
            batch_op.drop_column('body')
            batch_op.alter_column('body_temp', new_column_name='body')
        else:
            batch_op.alter_column('body', nullable=True, existing_type=sa.Text(), type_=sa.VARCHAR(length=140))
    # ### end Alembic commands ###
